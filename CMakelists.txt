cmake_minimum_required(VERSION 3.8)
project(unixsock)
add_definitions("-std=c++11")

set(INCLUDE_DIR include)
set(SOURCES_DIR src)

set(HEADERS
    ${INCLUDE_DIR}/builders/response_builders/end_request_builder.hpp
    ${INCLUDE_DIR}/builders/response_builders/stdout_builder.hpp
    ${INCLUDE_DIR}/calculators/bytes_expander.hpp
    ${INCLUDE_DIR}/calculators/bytes_reducer.hpp
    ${INCLUDE_DIR}/exceptions/basic_exception.hpp
    ${INCLUDE_DIR}/exceptions/exceptions.hpp
    ${INCLUDE_DIR}/constants/limits.hpp
    ${INCLUDE_DIR}/constants/flags.hpp
    ${INCLUDE_DIR}/constants/versions.hpp
    ${INCLUDE_DIR}/handlers/request_handlers/body_handler.hpp
    ${INCLUDE_DIR}/handlers/request_handlers/header_handler.hpp
    ${INCLUDE_DIR}/handlers/connection_handler.hpp
    ${INCLUDE_DIR}/parsers/request_parsers/abstract_parser.hpp
    ${INCLUDE_DIR}/parsers/request_parsers/begin_request_parser.hpp
    ${INCLUDE_DIR}/parsers/request_parsers/body_parsing_chain.hpp
    ${INCLUDE_DIR}/parsers/request_parsers/data_parser.hpp
    ${INCLUDE_DIR}/parsers/request_parsers/get_values_parser.hpp
    ${INCLUDE_DIR}/parsers/request_parsers/header_parser.hpp
    ${INCLUDE_DIR}/parsers/request_parsers/params_parser.hpp
    ${INCLUDE_DIR}/parsers/request_parsers/stdin_parser.hpp
    ${INCLUDE_DIR}/pointers/connection_handler_pointer.hpp
    ${INCLUDE_DIR}/pointers/connection_pointer.hpp
    ${INCLUDE_DIR}/pointers/response_pointer.hpp
    ${INCLUDE_DIR}/body.hpp
    ${INCLUDE_DIR}/server.hpp
    ${INCLUDE_DIR}/buffer.hpp
    ${INCLUDE_DIR}/connection.fwd.hpp
    ${INCLUDE_DIR}/connection.hpp
    ${INCLUDE_DIR}/header.hpp
    ${INCLUDE_DIR}/header_type.hpp
    ${INCLUDE_DIR}/protocol_status_type.hpp
    ${INCLUDE_DIR}/request.hpp
    ${INCLUDE_DIR}/response.hpp
    ${INCLUDE_DIR}/role_type.hpp
    ${INCLUDE_DIR}/state.hpp
)

set(SOURCES
  ${SOURCES_DIR}/exceptions/basic_exception.cpp
  ${SOURCES_DIR}/handlers/connection_handler.cpp
  ${SOURCES_DIR}/handlers/request_handlers/body_handler.cpp
  ${SOURCES_DIR}/handlers/request_handlers/header_handler.cpp
  ${SOURCES_DIR}/connection.cpp
  ${SOURCES_DIR}/server.cpp
)

include(${PROJECT_SOURCE_DIR}/conanbuildinfo.cmake)
conan_basic_setup()

add_executable(main main.cpp ${HEADERS} ${SOURCES})
target_link_libraries(main ${CONAN_LIBS})
target_include_directories(main PRIVATE ${INCLUDE_DIR} ${SOURCES_DIR})